class Solution {
public:
    int vis[51][51]={0};
    int col;
    int m;
    int n;
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        col=image[sr][sc];
        m=image.size();
        n=image[0].size();
        return(dfs(image, sr, sc,m,n ,newColor));
        
        
    }
    vector<vector<int>> dfs(vector<vector<int>>& image, int sr, int sc,int m, int n, int newColor)
    {
        if(!isValid(sr, sc, image.size(),image[0].size(),image))
            return image;

        // Changing the current cell to new color
       image[sr][sc]=newColor;

        // Traversing adjacent cells
        dfs(image,sr+1,sc,m,n, newColor);
        dfs(image,sr-1,sc,m,n, newColor);
        dfs(image,sr,sc+1,m,n, newColor);
        dfs(image,sr,sc-1,m,n, newColor);
        return image;
            
        
    }
    
    bool isValid(int sr,  int sc, int m, int n, vector<vector<int>>& image)
    {
        if(sr<0||sc<0||sr>=m||sc>=n|| image[sr][sc]!=col||vis[sr][sc])return false;
        return true;
    }
};