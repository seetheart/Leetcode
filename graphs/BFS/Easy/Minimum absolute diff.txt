class Solution {
public:
    vector<int> v;
    int getMinimumDifference(TreeNode* root) {
        int res=INT_MAX;
        inorder(root); // using inorder traversal for sorted list
        for(int i=1;i<v.size();i++)
            res=min(res,v[i]-v[i-1]);
        return res;
    }
    void inorder(TreeNode* root)
    {    if(root==NULL)return;
         inorder(root->left);
         v.push_back(root->val); //pushing elements into vector.
         inorder(root->right);
        
    }
        
      
};

//another method without vector
class Solution {
  int x=-1;
  int mn=INT_MAX;
public:
        int getMinimumDifference(TreeNode* root) {
      inorder(root);
      return mn;
    }
  
    void inorder(TreeNode* root){
      
      if(!root)
        return ;
      
      inorder(root->left);
      
      if(x==-1)
        x=root->val;
      
      else{
        mn=min(mn,root->val - x);
        x=root->val;
      }
      
      inorder(root->right);
    }
  
};