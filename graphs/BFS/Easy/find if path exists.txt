class Solution {
public:
    
    map<int, bool> visited;
    map<int, list<int>> adj;
    
    void dfs(int v) {
        visited[v] = true;
        for(int i : adj[v])
            if(!visited[i])
                dfs(i);
    }
    
    bool validPath(int n, vector<vector<int>>& edges, int start, int end) {
        for (int i = 0 ; i < edges.size() ; i++) {
                adj[edges[i][0]].push_back(edges[i][1]);
                adj[edges[i][1]].push_back(edges[i][0]);
            }
        dfs(start);
        return visited[end] == true;
    } 
};